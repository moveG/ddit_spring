/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2022-01-27 02:44:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.pds;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class modify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/common/summernote.jsp", Long.valueOf(1639050644628L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1640308347111L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<title>PdsModify</title>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/plugins/summernote/summernote-bs4.css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"content-wrapper\">\r\n");
      out.write("	<section class=\"content-header\">\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("			<div class=\"row md-2\">\r\n");
      out.write("				<div class=\"col-sm-6\">\r\n");
      out.write("					<h1 class=\"m-0\">PdsModify</h1>			\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-sm-6\">\r\n");
      out.write("					<ol class=\"breadcrumb float-sm-right\">\r\n");
      out.write("						<li class=\"breadcrumb-item\">\r\n");
      out.write("							<a href=\"modifyForm.do?pno=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pdsVO.pno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("								<i class=\"fa fa-dashboard\"></i>PdsModify\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li class=\"breadcrumb-item active\">\r\n");
      out.write("							Home\r\n");
      out.write("						</li>		        \r\n");
      out.write("					</ol>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("	<section class=\"content\">\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<div class=\"card-header with-border\" style=\"background:#f7f7f7;border-bottom:none;\">\r\n");
      out.write("					<div class=\"row\">\r\n");
      out.write("						<div class=\"col-sm-12\">\r\n");
      out.write("							<div class=\"float-right\">\r\n");
      out.write("								<button type=\"button\" class=\"btn btn-primary\" id=\"modifyBtn\" onclick=\"modify_go();\">수정</button>\r\n");
      out.write("								<button type=\"button\" class=\"btn btn-secondary\" id=\"cancelBtn\" onclick=\"history.go(-1);\">취소</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"card-body\">\r\n");
      out.write("					<form role=\"form\" name=\"modifyForm\" id=\"modifyForm\" method=\"post\" action=\"modify.do\" enctype=\"multipart/form-data\">\r\n");
      out.write("						<input type=\"hidden\" name=\"pno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pdsVO.pno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<div class=\"col-md-12\">\r\n");
      out.write("								<table class=\"table\">\r\n");
      out.write("									<tr class=\"form-group\">\r\n");
      out.write("										<th style=\"width:130px;padding:0px auto;\">제목</th>\r\n");
      out.write("										<td style=\"padding:0px;vertical-align:middle;\">\r\n");
      out.write("											<input type=\"text\" id=\"title\" class=\"form-control form-control-sm\" name=\"title\" placeholder=\"Enter Title\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pdsVO.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr class=\"form-group\">\r\n");
      out.write("										<th style=\"width:130px;padding:0px auto;\">작성자</th>\r\n");
      out.write("										<td style=\"padding:0px;vertical-align:middle;\">\r\n");
      out.write("											<input type=\"text\" id=\"writer\" class=\"form-control form-control-sm\" name=\"writer\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pdsVO.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"background:white;\" readonly>\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr class=\"form-group\">\r\n");
      out.write("										<td colspan=\"2\">\r\n");
      out.write("											<textarea id=\"content\" class=\"form-control form-control-sm\" name=\"content\" id=\"content\" placeholder=\"Enter Content\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pdsVO.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("								</table>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>	\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<div class=\"col-md-12\">\r\n");
      out.write("								<div class=\"form-group\">\r\n");
      out.write("									<div class=\"card\">\r\n");
      out.write("										<div class=\"card-header\" style=\"background:#f7f7f7;border-bottom:none;\">\r\n");
      out.write("											<button class=\"btn btn-sm btn-primary\" onclick=\"addFile_go();\" type=\"button\" id=\"addFileBtn\">파일첨부</button>\r\n");
      out.write("										</div>\r\n");
      out.write("										<div class=\"card-body fileInput\">	\r\n");
      out.write("											<ul class=\"mailbox-attachments d-flex align-items-stretch clearfix\">\r\n");
      out.write("											");
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      boolean _jspx_th_c_005fforEach_005f0_reused = false;
      try {
        _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fforEach_005f0.setParent(null);
        // /WEB-INF/views/pds/modify.jsp(85,11) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/pds/modify.jsp(85,11) '${pdsVO.attachList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pdsVO.attachList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
        // /WEB-INF/views/pds/modify.jsp(85,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f0.setVar("attach");
        int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
          if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            do {
              out.write("<li class=\"attach-item thumb");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.ano}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\" file-name=\"");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.fileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\" target-ano=\"");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.ano}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\">\r\n");
              out.write("													<div class=\"mailbox-attachment-info\">\r\n");
              out.write("														<div class=\"row\">\r\n");
              out.write("															<div class=\"col-md-12\">\r\n");
              out.write("																<a class=\"mailbox-attachment-name\" name=\"attachedFile\" attach-fileName=\"");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.fileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\" attach-no=\"");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.ano}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\" href=\"");
              out.print(request.getContextPath());
              out.write("/pds/getFile.do?ano=");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.ano}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\">\r\n");
              out.write("																	<i class=\"fas fa-paperclip\"></i>\r\n");
              out.write("																	");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.fileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("</a>\r\n");
              out.write("																<button type=\"button\" onclick=\"removeFile_go('thumb");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.ano}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("');return false;\" style=\"border:0;outline:0;\" class=\"btn btn-danger btn-xs btn-success float-right\">X</button>\r\n");
              out.write("															</div>\r\n");
              out.write("														</div>\r\n");
              out.write("													</div>\r\n");
              out.write("												</li>\r\n");
              out.write("											");
              int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
          }
          if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_c_005fforEach_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
        _jspx_th_c_005fforEach_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
      }
      out.write("</ul>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("    			<div class=\"card-footer\"></div>\r\n");
      out.write("    		</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("</div>\r\n");
      out.write("	\r\n");
      out.write("<script>\r\n");
      out.write("	function summernote_go(target){\r\n");
      out.write("		target.summernote({//JSON형태로 각각의 설정이 있음, 키값으로 정해져있음, CSS는 불가능\r\n");
      out.write("			placeholder : 'Enter Content',\r\n");
      out.write("			lang : 'ko-KR',\r\n");
      out.write("			height : '200px',\r\n");
      out.write("			disableResizeEditor : false,\r\n");
      out.write("			callbacks : {\r\n");
      out.write("				onImageUpload : function(files, editor, welEditable){//files : 자바스크립트 file 객체, 배열, 순서X\r\n");
      out.write("					for(var file of files){\r\n");
      out.write("						/* if(file.name.substring(file.name.lastIndexOf(\".\") + 1).toUpperCase() != \"JPG\"){\r\n");
      out.write("							alert(\"JPG 형식의 이미지만 가능합니다.\");\r\n");
      out.write("							return;\r\n");
      out.write("						} */\r\n");
      out.write("						if(file.size > 1024 * 1024 * 5){\r\n");
      out.write("							alert(\"5MB 미만의 이미지만 가능합니다.\");\r\n");
      out.write("							return;\r\n");
      out.write("						}\r\n");
      out.write("					}\r\n");
      out.write("					for(var file of files){\r\n");
      out.write("						sendFile(file, this);\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				onMediaDelete : function(target){\r\n");
      out.write("					deleteFile(target[0].src);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function deleteFile(src){\r\n");
      out.write("		//교육적인 차원에서 json 사용함\r\n");
      out.write("		var splitSrc = src.split(\"=\");\r\n");
      out.write("		var fileName = splitSrc[splitSrc.length - 1];\r\n");
      out.write("		\r\n");
      out.write("		var fileData = {fileName:fileName};	//object mapper로 받으려함, command 객체 필요\r\n");
      out.write("		//연습을 위한 json형태 데이터, url주소 형식이 정해져있기 때문에 json형태의 데이터는 get으로 못보내고 post로 보냄\r\n");
      out.write("		//json데이터도 String 타입으로 넘어감\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			//data가 String화시킨 json데이터라면, contentType에 반드시 json형태임을 명싷해줘야함\r\n");
      out.write("			url : \"");
      out.print(request.getContextPath());
      out.write("/deleteImg.do\",\r\n");
      out.write("			data : JSON.stringify(fileData),	//json을 String형태로 변환\r\n");
      out.write("			type : \"post\",\r\n");
      out.write("			contentType : \"application/json\",	//데이터가 json형태임을 명시\r\n");
      out.write("			success : function(res){\r\n");
      out.write("				console.log(res);	\r\n");
      out.write("			},\r\n");
      out.write("			error : function(){\r\n");
      out.write("				alert(\"이미지 삭제가 불가능합니다.\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function sendFile(file, el){//el : textarea#content(텍스트에어리어)을 의미함\r\n");
      out.write("		var form_data = new FormData();\r\n");
      out.write("		form_data.append(\"file\", file);\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			data : form_data,\r\n");
      out.write("			type : \"POST\",\r\n");
      out.write("			url : '");
      out.print(request.getContextPath());
      out.write("/uploadImg.do',\r\n");
      out.write("			cache : false,\r\n");
      out.write("			contentType : false,\r\n");
      out.write("			processData : false,\r\n");
      out.write("			success : function(img_url){\r\n");
      out.write("				$(el).summernote('editor.insertImage', img_url);\r\n");
      out.write("			},\r\n");
      out.write("			error : function(){\r\n");
      out.write("				alert(file.name + \" 업로드에 실패했습니다.\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("</script>");
      out.write("<script>\r\n");
      out.write("	window.onload = function(){\r\n");
      out.write("		summernote_go($('textarea#content'));\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function removeFile_go(className){\r\n");
      out.write("		var li = $('li.' + className);\r\n");
      out.write("		if(!confirm(\"\" + \" 파일을 정말 삭제하시겠습니까?\")){\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		li.remove();\r\n");
      out.write("		\r\n");
      out.write("		var input = $('<input>').attr({\r\n");
      out.write("			\"type\" : \"hidden\",\r\n");
      out.write("			\"name\" : \"deleteFile\",\r\n");
      out.write("			\"value\" : li.attr(\"target-ano\")\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('form[role=\"form\"]').prepend(input);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	var dataNum = 0;\r\n");
      out.write("	\r\n");
      out.write("	function addFile_go(){\r\n");
      out.write("		var attachedFile = $('a[name=\"attachedFile\"]').length;	//기존파일 개수\r\n");
      out.write("		var inputFiles = $('input[name=\"uploadFile\"]').length;	//추가파일 개수\r\n");
      out.write("		var attachCount = attachedFile + inputFiles;			//전체파일 개수\r\n");
      out.write("		if(attachCount >= 5){\r\n");
      out.write("			alert(\"파일 추가는 5개 까지만 가능합니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		var div = $('<div>').addClass(\"inputRow\").attr(\"data-no\", dataNum);\r\n");
      out.write("		var input = $('<input>').attr({\"type\":\"file\", \"name\":\"uploadFile\"}).css(\"display\", \"inline\");\r\n");
      out.write("		div.append(input).append(\"<button type='button' class='badge bg-red' onclick='remove_go(\" + dataNum + \")' style='border:0;outline:0;'>X</button>\");\r\n");
      out.write("		$('.fileInput').append(div);\r\n");
      out.write("		\r\n");
      out.write("		dataNum++;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function remove_go(dataNum){\r\n");
      out.write("		$('div[data-no=\"' + dataNum + '\"]').remove();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function modify_go(){\r\n");
      out.write("		var form = document.modifyForm;\r\n");
      out.write("		\r\n");
      out.write("		//제목 유효성 확인\r\n");
      out.write("		if($(\"input[name='title']\").val() == \"\"){\r\n");
      out.write("			alert(\"제목을 입력해주세요.\");\r\n");
      out.write("			$(\"input[name='title']\").focus();\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//내용 유효성 확인\r\n");
      out.write("		if($(\"textarea[name='content']\").val() == \"\"){\r\n");
      out.write("			alert(\"내용을 입력해주세요.\");\r\n");
      out.write("			$(\"textarea[name='content']\").focus();\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//파일첨부 확인\r\n");
      out.write("		var files = $('input[name=\"uploadFile\"]');\r\n");
      out.write("		for(var file of files){\r\n");
      out.write("			console.log(file.name + \" : \" + file.value);\r\n");
      out.write("			if(file.value == \"\"){\r\n");
      out.write("				alert(\"파일을 선택해주세요.\");\r\n");
      out.write("				file.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		form.submit();\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
